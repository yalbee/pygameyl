Александр Бугаев
Flappy Bird

В терминал вводится ник, по которому будет создан профиль.
Профиль игрока сохраняется в data.csv при выходе.
В таблице хранятся рекорд игрока, количество монет, выбранный скин и купленные в магазине скины.
В магазине игрок может купить или поменять скин для птички.
В таблице лидеров показываются рекорды игроков из таблицы.

Во время игры:
Птичка должна проходить препятствия-трубы, за каждое пройденное препятствие дается 1 очко.
прыжок - ЛКМ, ПКМ или Пробел
После каждого препятствия с шансом 25% появляется монетка.
Собранная монетка дает 10 монет.
Счет после смерти умножается на случайный коэффициент (от 0.8 до 1.2) и прибавляется к монетам игрока.

Классы:
Player - профиль игрока, инициализируется после ввода ника. Если введенный ник есть в csv файле, профиль загружается оттуда, если нет - создается новый.
Во время игры данные игрока изменяются, а во время выхода сохраняются в тот же файл.
Bird - анимированная птичка, имеет функции flap - прыжок и game_over - меню окончания игры после столкновения. Имеет атрибут score_count - счет игрока, и создается при начале игры. Как и в оригинальном Flappy Bird, птичка поворачивается вокруг своей оси во время прыжков и падений.
Tube - препятствия, при столкновении с которыми игра оканчивается. Во время игры появляются по таймеру, на случайной высоте.
Border - невидимый спрайт, находится в промежутке между нижними и верхними препятствиями. При контакте с птичкой пропадает и к score_count птички прибавится 1 очко.
Coin - анимированный спрайт монетки.
Shadow - эффекты при сборе монетки, окончании игры и покупках в магазине.
Button - кнопки в меню. В этот класс передается позиция на экране, ширина и высота, цвет, текст и исполняемая при нажатии функция. При наведении на кнопку появится белая рамка.

Использованные библиотеки:
-pygame
-sys и os, для загрузки изображений
-random
-csv, для сохранений
